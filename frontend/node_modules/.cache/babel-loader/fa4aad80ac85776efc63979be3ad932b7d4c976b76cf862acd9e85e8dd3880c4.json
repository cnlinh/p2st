{"ast":null,"code":"import { createWebHistory, createRouter } from \"vue-router\";\nimport store from '../store';\nimport PageHome from \"../views/PageHome.vue\";\nimport PageLogin from \"../views/PageLogin.vue\";\nimport PageLogout from \"../views/PageLogout.vue\";\nimport PageRegister from \"../views/PageRegister.vue\";\nconst routes = [{\n  path: \"/\",\n  name: \"home\",\n  component: PageHome,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/home\",\n  component: PageHome,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/login\",\n  component: PageLogin\n}, {\n  path: \"/register\",\n  component: PageRegister\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  // Check if the route requires authentication\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    // Check if the user is logged in\n    if (store.state.auth.status.loggedIn) {\n      next(); // Proceed to the route\n    } else {\n      next({\n        path: \"/login\"\n      }); // Redirect to the login page\n    }\n  } else {\n    next(); // Proceed to the route\n  }\n});\n\nexport default router;","map":{"version":3,"names":["createWebHistory","createRouter","store","PageHome","PageLogin","PageLogout","PageRegister","routes","path","name","component","meta","requiresAuth","router","history","beforeEach","to","from","next","matched","some","record","state","auth","status","loggedIn"],"sources":["/Users/linhcao/Desktop/NUS/chat-gpt/frontend/src/router/index.js"],"sourcesContent":["import { createWebHistory, createRouter } from \"vue-router\";\nimport store from '../store';\n\nimport PageHome from \"../views/PageHome.vue\"\nimport PageLogin from \"../views/PageLogin.vue\"\nimport PageLogout from \"../views/PageLogout.vue\"\nimport PageRegister from \"../views/PageRegister.vue\"\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"home\",\n    component: PageHome,\n    meta: { requiresAuth: true },\n  },\n  {\n    path: \"/home\",\n    component: PageHome,\n    meta: { requiresAuth: true },\n  },\n  {\n    path: \"/login\",\n    component: PageLogin,\n  },\n  {\n    path: \"/register\",\n    component: PageRegister,\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\nrouter.beforeEach((to, from, next) => {\n  // Check if the route requires authentication\n  if (to.matched.some((record) => record.meta.requiresAuth)) {\n    // Check if the user is logged in\n    if (store.state.auth.status.loggedIn) {\n      next(); // Proceed to the route\n    } else {\n      next({ path: \"/login\" }); // Redirect to the login page\n    }\n  } else {\n    next(); // Proceed to the route\n  }\n});\n\nexport default router;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,YAAY,QAAQ,YAAY;AAC3D,OAAOC,KAAK,MAAM,UAAU;AAE5B,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,YAAY,MAAM,2BAA2B;AAEpD,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEP,QAAQ;EACnBQ,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,OAAO;EACbE,SAAS,EAAEP,QAAQ;EACnBQ,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdE,SAAS,EAAEN;AACb,CAAC,EACD;EACEI,IAAI,EAAE,WAAW;EACjBE,SAAS,EAAEJ;AACb,CAAC,CACF;AAED,MAAMO,MAAM,GAAGZ,YAAY,CAAC;EAC1Ba,OAAO,EAAEd,gBAAgB,CAAC,CAAC;EAC3BO;AACF,CAAC,CAAC;AAEFM,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC;EACA,IAAIF,EAAE,CAACG,OAAO,CAACC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACV,IAAI,CAACC,YAAY,CAAC,EAAE;IACzD;IACA,IAAIV,KAAK,CAACoB,KAAK,CAACC,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE;MACpCP,IAAI,CAAC,CAAC,CAAC,CAAC;IACV,CAAC,MAAM;MACLA,IAAI,CAAC;QAAEV,IAAI,EAAE;MAAS,CAAC,CAAC,CAAC,CAAC;IAC5B;EACF,CAAC,MAAM;IACLU,IAAI,CAAC,CAAC,CAAC,CAAC;EACV;AACF,CAAC,CAAC;;AAEF,eAAeL,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}