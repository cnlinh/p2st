{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PublicService from '../services/public.service';\nexport default {\n  name: \"PageRegister\",\n  data() {\n    return {\n      validationErrors: {},\n      name: \"\",\n      surname: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      isTOSAccepted: false\n    };\n  },\n  methods: {\n    clearError(fieldName) {\n      if (this.validationErrors[fieldName]) {\n        this.validationErrors[fieldName] = \"\";\n      }\n    },\n    validateForm() {\n      this.validationErrors = {};\n      if (!this.name) {\n        this.validationErrors.name = \"Name is required\";\n      }\n      if (!this.email) {\n        this.validationErrors.email = \"Email address is required\";\n      }\n      if (!this.password) {\n        this.validationErrors.password = \"Password is required\";\n      }\n      if (!this.confirmPassword) {\n        this.validationErrors.confirmPassword = \"Confirm Password is required\";\n      } else if (this.password !== this.confirmPassword) {\n        this.validationErrors.confirmPassword = \"Passwords do not match\";\n      }\n      if (!this.isTOSAccepted) {\n        this.validationErrors.isTOSAccepted = \"Please accept the Terms of Service and Privacy Policy\";\n      }\n      return Object.keys(this.validationErrors).length === 0;\n    },\n    async submitUserDetails() {\n      if (!this.validateForm()) {\n        return;\n      }\n      const userDetails = {};\n      if (this.name) {\n        userDetails.name = this.name;\n      }\n      if (this.surname) {\n        userDetails.surname = this.surname;\n      }\n      if (this.email) {\n        userDetails.email = this.email;\n      }\n      if (this.password) {\n        userDetails.password = this.password;\n      }\n      try {\n        await PublicService.registerUser(userDetails);\n        this.validationErrors = {};\n        this.$router.push({\n          name: 'EmailVerification',\n          query: {\n            email: this.email\n          }\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["PublicService","name","data","validationErrors","surname","email","password","confirmPassword","isTOSAccepted","methods","clearError","fieldName","validateForm","Object","keys","length","submitUserDetails","userDetails","registerUser","$router","push","query","error","console","log"],"sources":["/Users/linhcao/Desktop/NUS/chat-gpt/frontend/src/views/PageRegister.vue"],"sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div class=\"row min-vh-100 bg-100\">\n      <div class=\"col-6 d-none d-lg-block\" style=\"--falcon-gutter-x: 0\">\n        <div class=\"card mb-3 h-100 d-flex justify-content-center bg-primary\">\n          <div class=\"tab-content\">\n            <div class=\"tab-pane preview-tab-pane active\" role=\"tabpanel\"\n              aria-labelledby=\"tab-dom-60d68d55-fe26-474c-98d8-62d1587bc3f8\"\n              id=\"dom-60d68d55-fe26-474c-98d8-62d1587bc3f8\">\n              <div class=\"carousel slide overflow-clip\" id=\"carouselExampleCaptions\" data-ride=\"carousel\">\n                <div class=\"carousel-indicators\">\n                  <button class=\"active\" type=\"button\" data-bs-target=\"#carouselExampleCaptions\" data-bs-slide-to=\"0\"\n                    aria-current=\"true\" aria-label=\"Slide 1\"></button>\n                  <button type=\"button\" data-bs-target=\"#carouselExampleCaptions\" data-bs-slide-to=\"1\"\n                    aria-label=\"Slide 2\"></button>\n                  <button type=\"button\" data-bs-target=\"#carouselExampleCaptions\" data-bs-slide-to=\"2\"\n                    aria-label=\"Slide 3\"></button>\n                </div>\n                <div class=\"carousel-inner light\">\n                  <div class=\"carousel-item active\">\n                    <img class=\"d-block w-100\" src=\"../assets/img/generic/8.jpg\" alt=\"First slide\" />\n                    <div class=\"carousel-caption d-none d-md-block\">\n                      <h5 class=\"text-white\">First Slide Heading</h5>\n                      <p>\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                      </p>\n                    </div>\n                  </div>\n                  <div class=\"carousel-item h-100\">\n                    <img class=\"d-block w-100\" src=\"../assets/img/generic/8.jpg\" alt=\"Second slide\" />\n                    <div class=\"carousel-caption d-none d-md-block\">\n                      <h5 class=\"text-white\">Second Slide Heading</h5>\n                      <p>\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                      </p>\n                    </div>\n                  </div>\n                  <div class=\"carousel-item h-100\">\n                    <img class=\"d-block w-100\" src=\"../assets/img/generic/8.jpg\" alt=\"Third slide\" />\n                    <div class=\"carousel-caption d-none d-md-block\">\n                      <h5 class=\"text-white\">Third Slide Heading</h5>\n                      <p>\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit\n                      </p>\n                    </div>\n                  </div>\n                </div>\n\n                <button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleCaptions\"\n                  data-bs-slide=\"prev\">\n                  <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                  <span class=\"sr-only\">Previous</span>\n                </button>\n\n                <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleCaptions\"\n                  data-bs-slide=\"next\">\n                  <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                  <span class=\"sr-only\">Next</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!--/.bg-holder-->\n      </div>\n      <div class=\"col-sm-10 col-md-6 px-sm-0 align-self-center mx-auto py-5\">\n        <div class=\"row justify-content-center g-0\">\n          <div class=\"col-lg-9 col-xl-8 col-xxl-6\">\n            <div class=\"row flex-between-center\">\n              <div class=\"col-auto\">\n                <h3>Sign up with your email</h3>\n              </div>\n            </div>\n            <form>\n              <div class=\"row gx-2\">\n                <div class=\"mb-3 col-sm-6\">\n                  <label class=\"form-label required\" for=\"name\">First Name</label>\n                  <input v-model=\"name\" class=\"form-control\" type=\"text\" id=\"name\" placeholder=\"Your first name\"\n                    @input=\"clearError('name')\" />\n                  <span class=\"text-danger\">{{ validationErrors.name }}</span>\n                </div>\n                <div class=\"mb-3 col-sm-6\">\n                  <label class=\"form-label\" for=\"surname\">Last Name</label>\n                  <input v-model=\"surname\" class=\"form-control\" type=\"text\" id=\"surname\" placeholder=\"Your last name\" />\n                </div>\n              </div>\n              <div class=\"mb-3\">\n                <label class=\"form-label required\" for=\"email\">Email</label>\n                <input v-model=\"email\" class=\"form-control\" type=\"email\" id=\"email\" placeholder=\"Enter email\"\n                  @input=\"clearError('email')\" />\n                <span class=\"text-danger\">{{ validationErrors.email }}</span>\n              </div>\n              <div class=\"row gx-2\">\n                <div class=\"mb-3\">\n                  <label class=\"form-label required\" for=\"password\">Password</label>\n                  <input v-model=\"password\" class=\"form-control\" type=\"password\" id=\"password\"\n                    placeholder=\"Enter password\" @input=\"clearError('password')\" />\n                  <span class=\"text-danger\">{{ validationErrors.password }}</span>\n                </div>\n                <div class=\"mb-3\">\n                  <label class=\"form-label required\" for=\"confirmPassword\">Confirm Password</label>\n                  <input v-model=\"confirmPassword\" class=\"form-control\" type=\"password\" id=\"confirm-password\"\n                    placeholder=\"Confirm password\" @input=\"clearError('confirmPassword')\" />\n                  <span class=\"text-danger\">{{ validationErrors.confirmPassword }}</span>\n                </div>\n              </div>\n              <div class=\"form-check\">\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"cover-register-checkbox\" v-model=\"isTOSAccepted\"\n                  @input=\"clearError('isTOSAccepted')\" />\n                <label class=\"form-label\" for=\"cover-register-checkbox\">I agree to the <a href=\"#!\">Terms of Service\n                  </a>and\n                  <a href=\"#!\">Privacy Policy</a></label>\n                <div class=\"text-danger\">{{ validationErrors.isTOSAccepted }}</div>\n              </div>\n              <div class=\"mb-3\">\n                <button type=\"button\" class=\"btn btn-primary d-block w-100 mt-3\" @click=\"submitUserDetails\">\n                  Create account\n                </button>\n              </div>\n              <div class=\"col-auto fs--1 text-600 text-center\">\n                <span class=\"mb-0 fw-semi-bold\">Already have an account? </span>\n                <span>\n                  <a class=\"fw-bold\" href=\"/login\">Login</a>\n                </span>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PublicService from '../services/public.service';\n\nexport default {\n  name: \"PageRegister\",\n\n  data() {\n    return {\n      validationErrors: {},\n      name: \"\",\n      surname: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      isTOSAccepted: false,\n    }\n  },\n\n  methods: {\n    clearError(fieldName) {\n      if (this.validationErrors[fieldName]) {\n        this.validationErrors[fieldName] = \"\";\n      }\n    },\n\n    validateForm() {\n      this.validationErrors = {};\n\n      if (!this.name) {\n        this.validationErrors.name = \"Name is required\";\n      }\n\n      if (!this.email) {\n        this.validationErrors.email = \"Email address is required\";\n      }\n\n      if (!this.password) {\n        this.validationErrors.password = \"Password is required\";\n      }\n\n      if (!this.confirmPassword) {\n        this.validationErrors.confirmPassword = \"Confirm Password is required\";\n      } else if (this.password !== this.confirmPassword) {\n        this.validationErrors.confirmPassword = \"Passwords do not match\";\n      }\n\n      if (!this.isTOSAccepted) {\n        this.validationErrors.isTOSAccepted = \"Please accept the Terms of Service and Privacy Policy\";\n      }\n\n      return Object.keys(this.validationErrors).length === 0;\n    },\n\n    async submitUserDetails() {\n      if (!this.validateForm()) {\n        return;\n      }\n      const userDetails = {};\n\n      if (this.name) {\n        userDetails.name = this.name;\n      }\n      if (this.surname) {\n        userDetails.surname = this.surname;\n      }\n      if (this.email) {\n        userDetails.email = this.email;\n      }\n      if (this.password) {\n        userDetails.password = this.password;\n      }\n\n      try {\n        await PublicService.registerUser(userDetails);\n        this.validationErrors = {};\n        this.$router.push({\n          name: 'EmailVerification',\n          query: {\n            email: this.email,\n          },\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  },\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n@import \"../vendors/simplebar/simplebar.min.css\";\n@import \"../assets/css/user.min.css\";\n@import \"../assets/css/theme.min.css\";\n@import \"https://fonts.googleapis.com/css?family=Open+Sans:300,400,500,600,700%7cPoppins:300,400,500,600,700,800,900&amp;display=swap\";\n\n.required::after {\n  content: \" *\";\n  color: red;\n}\n</style>"],"mappings":";AAsIA,OAAOA,aAAY,MAAO,4BAA4B;AAEtD,eAAe;EACbC,IAAI,EAAE,cAAc;EAEpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE,CAAC,CAAC;MACpBF,IAAI,EAAE,EAAE;MACRG,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,aAAa,EAAE;IACjB;EACF,CAAC;EAEDC,OAAO,EAAE;IACPC,UAAUA,CAACC,SAAS,EAAE;MACpB,IAAI,IAAI,CAACR,gBAAgB,CAACQ,SAAS,CAAC,EAAE;QACpC,IAAI,CAACR,gBAAgB,CAACQ,SAAS,IAAI,EAAE;MACvC;IACF,CAAC;IAEDC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACT,gBAAe,GAAI,CAAC,CAAC;MAE1B,IAAI,CAAC,IAAI,CAACF,IAAI,EAAE;QACd,IAAI,CAACE,gBAAgB,CAACF,IAAG,GAAI,kBAAkB;MACjD;MAEA,IAAI,CAAC,IAAI,CAACI,KAAK,EAAE;QACf,IAAI,CAACF,gBAAgB,CAACE,KAAI,GAAI,2BAA2B;MAC3D;MAEA,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;QAClB,IAAI,CAACH,gBAAgB,CAACG,QAAO,GAAI,sBAAsB;MACzD;MAEA,IAAI,CAAC,IAAI,CAACC,eAAe,EAAE;QACzB,IAAI,CAACJ,gBAAgB,CAACI,eAAc,GAAI,8BAA8B;MACxE,OAAO,IAAI,IAAI,CAACD,QAAO,KAAM,IAAI,CAACC,eAAe,EAAE;QACjD,IAAI,CAACJ,gBAAgB,CAACI,eAAc,GAAI,wBAAwB;MAClE;MAEA,IAAI,CAAC,IAAI,CAACC,aAAa,EAAE;QACvB,IAAI,CAACL,gBAAgB,CAACK,aAAY,GAAI,uDAAuD;MAC/F;MAEA,OAAOK,MAAM,CAACC,IAAI,CAAC,IAAI,CAACX,gBAAgB,CAAC,CAACY,MAAK,KAAM,CAAC;IACxD,CAAC;IAED,MAAMC,iBAAiBA,CAAA,EAAG;MACxB,IAAI,CAAC,IAAI,CAACJ,YAAY,CAAC,CAAC,EAAE;QACxB;MACF;MACA,MAAMK,WAAU,GAAI,CAAC,CAAC;MAEtB,IAAI,IAAI,CAAChB,IAAI,EAAE;QACbgB,WAAW,CAAChB,IAAG,GAAI,IAAI,CAACA,IAAI;MAC9B;MACA,IAAI,IAAI,CAACG,OAAO,EAAE;QAChBa,WAAW,CAACb,OAAM,GAAI,IAAI,CAACA,OAAO;MACpC;MACA,IAAI,IAAI,CAACC,KAAK,EAAE;QACdY,WAAW,CAACZ,KAAI,GAAI,IAAI,CAACA,KAAK;MAChC;MACA,IAAI,IAAI,CAACC,QAAQ,EAAE;QACjBW,WAAW,CAACX,QAAO,GAAI,IAAI,CAACA,QAAQ;MACtC;MAEA,IAAI;QACF,MAAMN,aAAa,CAACkB,YAAY,CAACD,WAAW,CAAC;QAC7C,IAAI,CAACd,gBAAe,GAAI,CAAC,CAAC;QAC1B,IAAI,CAACgB,OAAO,CAACC,IAAI,CAAC;UAChBnB,IAAI,EAAE,mBAAmB;UACzBoB,KAAK,EAAE;YACLhB,KAAK,EAAE,IAAI,CAACA;UACd;QACF,CAAC,CAAC;MACJ,EAAE,OAAOiB,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}