{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/* eslint-env amd */\n/* globals module:false */\n\n// https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n(function (root, factory) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.AnchorJS = factory();\n    root.anchors = new root.AnchorJS();\n  }\n})(globalThis, function () {\n  'use strict';\n\n  function AnchorJS(options) {\n    this.options = options || {};\n    this.elements = [];\n\n    /**\n     * Assigns options to the internal options object, and provides defaults.\n     * @param {Object} opts - Options object\n     */\n    function _applyRemainingDefaultOptions(opts) {\n      opts.icon = Object.prototype.hasOwnProperty.call(opts, 'icon') ? opts.icon : '\\uE9CB'; // Accepts characters (and also URLs?), like  '#', '¶', '❡', or '§'.\n      opts.visible = Object.prototype.hasOwnProperty.call(opts, 'visible') ? opts.visible : 'hover'; // Also accepts 'always'\n      opts.placement = Object.prototype.hasOwnProperty.call(opts, 'placement') ? opts.placement : 'right'; // Also accepts 'left'\n      opts.ariaLabel = Object.prototype.hasOwnProperty.call(opts, 'ariaLabel') ? opts.ariaLabel : 'Anchor'; // Accepts any text.\n      opts.class = Object.prototype.hasOwnProperty.call(opts, 'class') ? opts.class : ''; // Accepts any class name.\n      opts.base = Object.prototype.hasOwnProperty.call(opts, 'base') ? opts.base : ''; // Accepts any base URI.\n      // Using Math.floor here will ensure the value is Number-cast and an integer.\n      opts.truncate = Object.prototype.hasOwnProperty.call(opts, 'truncate') ? Math.floor(opts.truncate) : 64; // Accepts any value that can be typecast to a number.\n      opts.titleText = Object.prototype.hasOwnProperty.call(opts, 'titleText') ? opts.titleText : ''; // Accepts any text.\n    }\n\n    _applyRemainingDefaultOptions(this.options);\n\n    /**\n     * Add anchor links to page elements.\n     * @param  {String|Array|Nodelist} selector - A CSS selector for targeting the elements you wish to add anchor links\n     *                                            to. Also accepts an array or nodeList containing the relavant elements.\n     * @return {this}                           - The AnchorJS object\n     */\n    this.add = function (selector) {\n      var elements,\n        elsWithIds,\n        idList,\n        elementID,\n        i,\n        index,\n        count,\n        tidyText,\n        newTidyText,\n        anchor,\n        hrefBase,\n        indexesToDrop = [];\n\n      // We reapply options here because somebody may have overwritten the default options object when setting options.\n      // For example, this overwrites all options but visible:\n      //\n      // anchors.options = { visible: 'always'; }\n      _applyRemainingDefaultOptions(this.options);\n\n      // Provide a sensible default selector, if none is given.\n      if (!selector) {\n        selector = 'h2, h3, h4, h5, h6';\n      }\n      elements = _getElements(selector);\n      if (elements.length === 0) {\n        return this;\n      }\n      _addBaselineStyles();\n\n      // We produce a list of existing IDs so we don't generate a duplicate.\n      elsWithIds = document.querySelectorAll('[id]');\n      idList = [].map.call(elsWithIds, function (el) {\n        return el.id;\n      });\n      for (i = 0; i < elements.length; i++) {\n        if (this.hasAnchorJSLink(elements[i])) {\n          indexesToDrop.push(i);\n          continue;\n        }\n        if (elements[i].hasAttribute('id')) {\n          elementID = elements[i].getAttribute('id');\n        } else if (elements[i].hasAttribute('data-anchor-id')) {\n          elementID = elements[i].getAttribute('data-anchor-id');\n        } else {\n          tidyText = this.urlify(elements[i].textContent);\n\n          // Compare our generated ID to existing IDs (and increment it if needed)\n          // before we add it to the page.\n          newTidyText = tidyText;\n          count = 0;\n          do {\n            if (index !== undefined) {\n              newTidyText = tidyText + '-' + count;\n            }\n            index = idList.indexOf(newTidyText);\n            count += 1;\n          } while (index !== -1);\n          index = undefined;\n          idList.push(newTidyText);\n          elements[i].setAttribute('id', newTidyText);\n          elementID = newTidyText;\n        }\n\n        // The following code efficiently builds this DOM structure:\n        // `<a class=\"anchorjs-link ${this.options.class}\"\n        //     aria-label=\"${this.options.ariaLabel}\"\n        //     data-anchorjs-icon=\"${this.options.icon}\"\n        //     title=\"${this.options.titleText}\"\n        //     href=\"this.options.base#${elementID}\">\n        // </a>;`\n        anchor = document.createElement('a');\n        anchor.className = 'anchorjs-link ' + this.options.class;\n        anchor.setAttribute('aria-label', this.options.ariaLabel);\n        anchor.setAttribute('data-anchorjs-icon', this.options.icon);\n        if (this.options.titleText) {\n          anchor.title = this.options.titleText;\n        }\n\n        // Adjust the href if there's a <base> tag. See https://github.com/bryanbraun/anchorjs/issues/98\n        hrefBase = document.querySelector('base') ? window.location.pathname + window.location.search : '';\n        hrefBase = this.options.base || hrefBase;\n        anchor.href = hrefBase + '#' + elementID;\n        if (this.options.visible === 'always') {\n          anchor.style.opacity = '1';\n        }\n        if (this.options.icon === '\\uE9CB') {\n          anchor.style.font = '1em/1 anchorjs-icons';\n\n          // We set lineHeight = 1 here because the `anchorjs-icons` font family could otherwise affect the\n          // height of the heading. This isn't the case for icons with `placement: left`, so we restore\n          // line-height: inherit in that case, ensuring they remain positioned correctly. For more info,\n          // see https://github.com/bryanbraun/anchorjs/issues/39.\n          if (this.options.placement === 'left') {\n            anchor.style.lineHeight = 'inherit';\n          }\n        }\n        if (this.options.placement === 'left') {\n          anchor.style.position = 'absolute';\n          anchor.style.marginLeft = '-1.25em';\n          anchor.style.paddingRight = '.25em';\n          anchor.style.paddingLeft = '.25em';\n          elements[i].insertBefore(anchor, elements[i].firstChild);\n        } else {\n          // if the option provided is `right` (or anything else).\n          anchor.style.marginLeft = '.1875em';\n          anchor.style.paddingRight = '.1875em';\n          anchor.style.paddingLeft = '.1875em';\n          elements[i].appendChild(anchor);\n        }\n      }\n      for (i = 0; i < indexesToDrop.length; i++) {\n        elements.splice(indexesToDrop[i] - i, 1);\n      }\n      this.elements = this.elements.concat(elements);\n      return this;\n    };\n\n    /**\n     * Removes all anchorjs-links from elements targeted by the selector.\n     * @param  {String|Array|Nodelist} selector - A CSS selector string targeting elements with anchor links,\n     *                                            OR a nodeList / array containing the DOM elements.\n     * @return {this}                           - The AnchorJS object\n     */\n    this.remove = function (selector) {\n      var index,\n        domAnchor,\n        elements = _getElements(selector);\n      for (var i = 0; i < elements.length; i++) {\n        domAnchor = elements[i].querySelector('.anchorjs-link');\n        if (domAnchor) {\n          // Drop the element from our main list, if it's in there.\n          index = this.elements.indexOf(elements[i]);\n          if (index !== -1) {\n            this.elements.splice(index, 1);\n          }\n\n          // Remove the anchor from the DOM.\n          elements[i].removeChild(domAnchor);\n        }\n      }\n      return this;\n    };\n\n    /**\n     * Removes all anchorjs links. Mostly used for tests.\n     */\n    this.removeAll = function () {\n      this.remove(this.elements);\n    };\n\n    /**\n     * Urlify - Refine text so it makes a good ID.\n     *\n     * To do this, we remove apostrophes, replace non-safe characters with hyphens,\n     * remove extra hyphens, truncate, trim hyphens, and make lowercase.\n     *\n     * @param  {String} text - Any text. Usually pulled from the webpage element we are linking to.\n     * @return {String}      - hyphen-delimited text for use in IDs and URLs.\n     */\n    this.urlify = function (text) {\n      // Decode HTML characters such as '&nbsp;' first.\n      var textareaElement = document.createElement('textarea');\n      textareaElement.innerHTML = text;\n      text = textareaElement.value;\n\n      // Regex for finding the non-safe URL characters (many need escaping):\n      //   & +$,:;=?@\"#{}|^~[`%!'<>]./()*\\ (newlines, tabs, backspace, vertical tabs, and non-breaking space)\n      var nonsafeChars = /[& +$,:;=?@\"#{}|^~[`%!'<>\\]./()*\\\\\\n\\t\\b\\v\\u00A0]/g;\n\n      // The reason we include this _applyRemainingDefaultOptions is so urlify can be called independently,\n      // even after setting options. This can be useful for tests or other applications.\n      if (!this.options.truncate) {\n        _applyRemainingDefaultOptions(this.options);\n      }\n\n      // Note: we trim hyphens after truncating because truncating can cause dangling hyphens.\n      // Example string:                      // \" ⚡⚡ Don't forget: URL fragments should be i18n-friendly, hyphenated, short, and clean.\"\n      return text.trim() // \"⚡⚡ Don't forget: URL fragments should be i18n-friendly, hyphenated, short, and clean.\"\n      .replace(/'/gi, '') // \"⚡⚡ Dont forget: URL fragments should be i18n-friendly, hyphenated, short, and clean.\"\n      .replace(nonsafeChars, '-') // \"⚡⚡-Dont-forget--URL-fragments-should-be-i18n-friendly--hyphenated--short--and-clean-\"\n      .replace(/-{2,}/g, '-') // \"⚡⚡-Dont-forget-URL-fragments-should-be-i18n-friendly-hyphenated-short-and-clean-\"\n      .substring(0, this.options.truncate) // \"⚡⚡-Dont-forget-URL-fragments-should-be-i18n-friendly-hyphenated-\"\n      .replace(/^-+|-+$/gm, '') // \"⚡⚡-Dont-forget-URL-fragments-should-be-i18n-friendly-hyphenated\"\n      .toLowerCase(); // \"⚡⚡-dont-forget-url-fragments-should-be-i18n-friendly-hyphenated\"\n    };\n\n    /**\n     * Determines if this element already has an AnchorJS link on it.\n     * Uses this technique: https://stackoverflow.com/a/5898748/1154642\n     * @param    {HTMLElement}  el - a DOM node\n     * @return   {Boolean}     true/false\n     */\n    this.hasAnchorJSLink = function (el) {\n      var hasLeftAnchor = el.firstChild && (' ' + el.firstChild.className + ' ').indexOf(' anchorjs-link ') > -1,\n        hasRightAnchor = el.lastChild && (' ' + el.lastChild.className + ' ').indexOf(' anchorjs-link ') > -1;\n      return hasLeftAnchor || hasRightAnchor || false;\n    };\n\n    /**\n     * Turns a selector, nodeList, or array of elements into an array of elements (so we can use array methods).\n     * It also throws errors on any other inputs. Used to handle inputs to .add and .remove.\n     * @param  {String|Array|Nodelist} input - A CSS selector string targeting elements with anchor links,\n     *                                         OR a nodeList / array containing the DOM elements.\n     * @return {Array} - An array containing the elements we want.\n     */\n    function _getElements(input) {\n      var elements;\n      if (typeof input === 'string' || input instanceof String) {\n        // See https://davidwalsh.name/nodelist-array for the technique transforming nodeList -> Array.\n        elements = [].slice.call(document.querySelectorAll(input));\n      } else if (Array.isArray(input) || input instanceof NodeList) {\n        elements = [].slice.call(input);\n      } else {\n        throw new TypeError('The selector provided to AnchorJS was invalid.');\n      }\n      return elements;\n    }\n\n    /**\n     * _addBaselineStyles\n     * Adds baseline styles to the page, used by all AnchorJS links irregardless of configuration.\n     */\n    function _addBaselineStyles() {\n      // We don't want to add global baseline styles if they've been added before.\n      if (document.head.querySelector('style.anchorjs') !== null) {\n        return;\n      }\n      var style = document.createElement('style'),\n        linkRule = '.anchorjs-link{' + 'opacity:0;' + 'text-decoration:none;' + '-webkit-font-smoothing:antialiased;' + '-moz-osx-font-smoothing:grayscale' + '}',\n        hoverRule = ':hover>.anchorjs-link,' + '.anchorjs-link:focus{' + 'opacity:1' + '}',\n        anchorjsLinkFontFace = '@font-face{' + 'font-family:anchorjs-icons;' +\n        // Icon from icomoon; 10px wide & 10px tall; 2 empty below & 4 above\n        'src:url(data:n/a;base64,AAEAAAALAIAAAwAwT1MvMg8yG2cAAAE4AAAAYGNtYXDp3gC3AAABpAAAAExnYXNwAAAAEAAAA9wAAAAIZ2x5ZlQCcfwAAAH4AAABCGhlYWQHFvHyAAAAvAAAADZoaGVhBnACFwAAAPQAAAAkaG10eASAADEAAAGYAAAADGxvY2EACACEAAAB8AAAAAhtYXhwAAYAVwAAARgAAAAgbmFtZQGOH9cAAAMAAAAAunBvc3QAAwAAAAADvAAAACAAAQAAAAEAAHzE2p9fDzz1AAkEAAAAAADRecUWAAAAANQA6R8AAAAAAoACwAAAAAgAAgAAAAAAAAABAAADwP/AAAACgAAA/9MCrQABAAAAAAAAAAAAAAAAAAAAAwABAAAAAwBVAAIAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAMCQAGQAAUAAAKZAswAAACPApkCzAAAAesAMwEJAAAAAAAAAAAAAAAAAAAAARAAAAAAAAAAAAAAAAAAAAAAQAAg//0DwP/AAEADwABAAAAAAQAAAAAAAAAAAAAAIAAAAAAAAAIAAAACgAAxAAAAAwAAAAMAAAAcAAEAAwAAABwAAwABAAAAHAAEADAAAAAIAAgAAgAAACDpy//9//8AAAAg6cv//f///+EWNwADAAEAAAAAAAAAAAAAAAAACACEAAEAAAAAAAAAAAAAAAAxAAACAAQARAKAAsAAKwBUAAABIiYnJjQ3NzY2MzIWFxYUBwcGIicmNDc3NjQnJiYjIgYHBwYUFxYUBwYGIwciJicmNDc3NjIXFhQHBwYUFxYWMzI2Nzc2NCcmNDc2MhcWFAcHBgYjARQGDAUtLXoWOR8fORYtLTgKGwoKCjgaGg0gEhIgDXoaGgkJBQwHdR85Fi0tOAobCgoKOBoaDSASEiANehoaCQkKGwotLXoWOR8BMwUFLYEuehYXFxYugC44CQkKGwo4GkoaDQ0NDXoaShoKGwoFBe8XFi6ALjgJCQobCjgaShoNDQ0NehpKGgobCgoKLYEuehYXAAAADACWAAEAAAAAAAEACAAAAAEAAAAAAAIAAwAIAAEAAAAAAAMACAAAAAEAAAAAAAQACAAAAAEAAAAAAAUAAQALAAEAAAAAAAYACAAAAAMAAQQJAAEAEAAMAAMAAQQJAAIABgAcAAMAAQQJAAMAEAAMAAMAAQQJAAQAEAAMAAMAAQQJAAUAAgAiAAMAAQQJAAYAEAAMYW5jaG9yanM0MDBAAGEAbgBjAGgAbwByAGoAcwA0ADAAMABAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAH//wAP) format(\"truetype\")' + '}',\n        pseudoElContent = '[data-anchorjs-icon]::after{' + 'content:attr(data-anchorjs-icon)' + '}',\n        firstStyleEl;\n      style.className = 'anchorjs';\n      style.appendChild(document.createTextNode('')); // Necessary for Webkit.\n\n      // We place it in the head with the other style tags, if possible, so as to\n      // not look out of place. We insert before the others so these styles can be\n      // overridden if necessary.\n      firstStyleEl = document.head.querySelector('[rel=\"stylesheet\"],style');\n      if (firstStyleEl === undefined) {\n        document.head.appendChild(style);\n      } else {\n        document.head.insertBefore(style, firstStyleEl);\n      }\n      style.sheet.insertRule(linkRule, style.sheet.cssRules.length);\n      style.sheet.insertRule(hoverRule, style.sheet.cssRules.length);\n      style.sheet.insertRule(pseudoElContent, style.sheet.cssRules.length);\n      style.sheet.insertRule(anchorjsLinkFontFace, style.sheet.cssRules.length);\n    }\n  }\n  return AnchorJS;\n});","map":{"version":3,"names":["root","factory","define","amd","module","exports","AnchorJS","anchors","globalThis","options","elements","_applyRemainingDefaultOptions","opts","icon","Object","prototype","hasOwnProperty","call","visible","placement","ariaLabel","class","base","truncate","Math","floor","titleText","add","selector","elsWithIds","idList","elementID","i","index","count","tidyText","newTidyText","anchor","hrefBase","indexesToDrop","_getElements","length","_addBaselineStyles","document","querySelectorAll","map","el","id","hasAnchorJSLink","push","hasAttribute","getAttribute","urlify","textContent","undefined","indexOf","setAttribute","createElement","className","title","querySelector","window","location","pathname","search","href","style","opacity","font","lineHeight","position","marginLeft","paddingRight","paddingLeft","insertBefore","firstChild","appendChild","splice","concat","remove","domAnchor","removeChild","removeAll","text","textareaElement","innerHTML","value","nonsafeChars","trim","replace","substring","toLowerCase","hasLeftAnchor","hasRightAnchor","lastChild","input","String","slice","Array","isArray","NodeList","TypeError","head","linkRule","hoverRule","anchorjsLinkFontFace","pseudoElContent","firstStyleEl","createTextNode","sheet","insertRule","cssRules"],"sources":["/Users/linhcao/Desktop/NUS/chat-gpt/frontend/node_modules/anchor-js/anchor.js"],"sourcesContent":["/* eslint-env amd */\n/* globals module:false */\n\n// https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n(function(root, factory) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.AnchorJS = factory();\n    root.anchors = new root.AnchorJS();\n  }\n}(globalThis, function() {\n  'use strict';\n\n  function AnchorJS(options) {\n    this.options = options || {};\n    this.elements = [];\n\n    /**\n     * Assigns options to the internal options object, and provides defaults.\n     * @param {Object} opts - Options object\n     */\n    function _applyRemainingDefaultOptions(opts) {\n      opts.icon = Object.prototype.hasOwnProperty.call(opts, 'icon') ? opts.icon : '\\uE9CB'; // Accepts characters (and also URLs?), like  '#', '¶', '❡', or '§'.\n      opts.visible = Object.prototype.hasOwnProperty.call(opts, 'visible') ? opts.visible : 'hover'; // Also accepts 'always'\n      opts.placement = Object.prototype.hasOwnProperty.call(opts, 'placement') ? opts.placement : 'right'; // Also accepts 'left'\n      opts.ariaLabel = Object.prototype.hasOwnProperty.call(opts, 'ariaLabel') ? opts.ariaLabel : 'Anchor'; // Accepts any text.\n      opts.class = Object.prototype.hasOwnProperty.call(opts, 'class') ? opts.class : ''; // Accepts any class name.\n      opts.base = Object.prototype.hasOwnProperty.call(opts, 'base') ? opts.base : ''; // Accepts any base URI.\n      // Using Math.floor here will ensure the value is Number-cast and an integer.\n      opts.truncate = Object.prototype.hasOwnProperty.call(opts, 'truncate') ? Math.floor(opts.truncate) : 64; // Accepts any value that can be typecast to a number.\n      opts.titleText = Object.prototype.hasOwnProperty.call(opts, 'titleText') ? opts.titleText : ''; // Accepts any text.\n    }\n\n    _applyRemainingDefaultOptions(this.options);\n\n    /**\n     * Add anchor links to page elements.\n     * @param  {String|Array|Nodelist} selector - A CSS selector for targeting the elements you wish to add anchor links\n     *                                            to. Also accepts an array or nodeList containing the relavant elements.\n     * @return {this}                           - The AnchorJS object\n     */\n    this.add = function(selector) {\n      var elements,\n          elsWithIds,\n          idList,\n          elementID,\n          i,\n          index,\n          count,\n          tidyText,\n          newTidyText,\n          anchor,\n          hrefBase,\n          indexesToDrop = [];\n\n      // We reapply options here because somebody may have overwritten the default options object when setting options.\n      // For example, this overwrites all options but visible:\n      //\n      // anchors.options = { visible: 'always'; }\n      _applyRemainingDefaultOptions(this.options);\n\n      // Provide a sensible default selector, if none is given.\n      if (!selector) {\n        selector = 'h2, h3, h4, h5, h6';\n      }\n\n      elements = _getElements(selector);\n\n      if (elements.length === 0) {\n        return this;\n      }\n\n      _addBaselineStyles();\n\n      // We produce a list of existing IDs so we don't generate a duplicate.\n      elsWithIds = document.querySelectorAll('[id]');\n      idList = [].map.call(elsWithIds, function(el) {\n        return el.id;\n      });\n\n      for (i = 0; i < elements.length; i++) {\n        if (this.hasAnchorJSLink(elements[i])) {\n          indexesToDrop.push(i);\n          continue;\n        }\n\n        if (elements[i].hasAttribute('id')) {\n          elementID = elements[i].getAttribute('id');\n        } else if (elements[i].hasAttribute('data-anchor-id')) {\n          elementID = elements[i].getAttribute('data-anchor-id');\n        } else {\n          tidyText = this.urlify(elements[i].textContent);\n\n          // Compare our generated ID to existing IDs (and increment it if needed)\n          // before we add it to the page.\n          newTidyText = tidyText;\n          count = 0;\n          do {\n            if (index !== undefined) {\n              newTidyText = tidyText + '-' + count;\n            }\n\n            index = idList.indexOf(newTidyText);\n            count += 1;\n          } while (index !== -1);\n\n          index = undefined;\n          idList.push(newTidyText);\n\n          elements[i].setAttribute('id', newTidyText);\n          elementID = newTidyText;\n        }\n\n        // The following code efficiently builds this DOM structure:\n        // `<a class=\"anchorjs-link ${this.options.class}\"\n        //     aria-label=\"${this.options.ariaLabel}\"\n        //     data-anchorjs-icon=\"${this.options.icon}\"\n        //     title=\"${this.options.titleText}\"\n        //     href=\"this.options.base#${elementID}\">\n        // </a>;`\n        anchor = document.createElement('a');\n        anchor.className = 'anchorjs-link ' + this.options.class;\n        anchor.setAttribute('aria-label', this.options.ariaLabel);\n        anchor.setAttribute('data-anchorjs-icon', this.options.icon);\n        if (this.options.titleText) {\n          anchor.title = this.options.titleText;\n        }\n\n        // Adjust the href if there's a <base> tag. See https://github.com/bryanbraun/anchorjs/issues/98\n        hrefBase = document.querySelector('base') ? window.location.pathname + window.location.search : '';\n        hrefBase = this.options.base || hrefBase;\n        anchor.href = hrefBase + '#' + elementID;\n\n        if (this.options.visible === 'always') {\n          anchor.style.opacity = '1';\n        }\n\n        if (this.options.icon === '\\uE9CB') {\n          anchor.style.font = '1em/1 anchorjs-icons';\n\n          // We set lineHeight = 1 here because the `anchorjs-icons` font family could otherwise affect the\n          // height of the heading. This isn't the case for icons with `placement: left`, so we restore\n          // line-height: inherit in that case, ensuring they remain positioned correctly. For more info,\n          // see https://github.com/bryanbraun/anchorjs/issues/39.\n          if (this.options.placement === 'left') {\n            anchor.style.lineHeight = 'inherit';\n          }\n        }\n\n        if (this.options.placement === 'left') {\n          anchor.style.position = 'absolute';\n          anchor.style.marginLeft = '-1.25em';\n          anchor.style.paddingRight = '.25em';\n          anchor.style.paddingLeft = '.25em';\n          elements[i].insertBefore(anchor, elements[i].firstChild);\n        } else { // if the option provided is `right` (or anything else).\n          anchor.style.marginLeft = '.1875em';\n          anchor.style.paddingRight = '.1875em';\n          anchor.style.paddingLeft = '.1875em';\n          elements[i].appendChild(anchor);\n        }\n      }\n\n      for (i = 0; i < indexesToDrop.length; i++) {\n        elements.splice(indexesToDrop[i] - i, 1);\n      }\n\n      this.elements = this.elements.concat(elements);\n\n      return this;\n    };\n\n    /**\n     * Removes all anchorjs-links from elements targeted by the selector.\n     * @param  {String|Array|Nodelist} selector - A CSS selector string targeting elements with anchor links,\n     *                                            OR a nodeList / array containing the DOM elements.\n     * @return {this}                           - The AnchorJS object\n     */\n    this.remove = function(selector) {\n      var index,\n          domAnchor,\n          elements = _getElements(selector);\n\n      for (var i = 0; i < elements.length; i++) {\n        domAnchor = elements[i].querySelector('.anchorjs-link');\n        if (domAnchor) {\n          // Drop the element from our main list, if it's in there.\n          index = this.elements.indexOf(elements[i]);\n          if (index !== -1) {\n            this.elements.splice(index, 1);\n          }\n\n          // Remove the anchor from the DOM.\n          elements[i].removeChild(domAnchor);\n        }\n      }\n\n      return this;\n    };\n\n    /**\n     * Removes all anchorjs links. Mostly used for tests.\n     */\n    this.removeAll = function() {\n      this.remove(this.elements);\n    };\n\n    /**\n     * Urlify - Refine text so it makes a good ID.\n     *\n     * To do this, we remove apostrophes, replace non-safe characters with hyphens,\n     * remove extra hyphens, truncate, trim hyphens, and make lowercase.\n     *\n     * @param  {String} text - Any text. Usually pulled from the webpage element we are linking to.\n     * @return {String}      - hyphen-delimited text for use in IDs and URLs.\n     */\n    this.urlify = function(text) {\n      // Decode HTML characters such as '&nbsp;' first.\n      var textareaElement = document.createElement('textarea');\n      textareaElement.innerHTML = text;\n      text = textareaElement.value;\n\n      // Regex for finding the non-safe URL characters (many need escaping):\n      //   & +$,:;=?@\"#{}|^~[`%!'<>]./()*\\ (newlines, tabs, backspace, vertical tabs, and non-breaking space)\n      var nonsafeChars = /[& +$,:;=?@\"#{}|^~[`%!'<>\\]./()*\\\\\\n\\t\\b\\v\\u00A0]/g;\n\n      // The reason we include this _applyRemainingDefaultOptions is so urlify can be called independently,\n      // even after setting options. This can be useful for tests or other applications.\n      if (!this.options.truncate) {\n        _applyRemainingDefaultOptions(this.options);\n      }\n\n      // Note: we trim hyphens after truncating because truncating can cause dangling hyphens.\n      // Example string:                      // \" ⚡⚡ Don't forget: URL fragments should be i18n-friendly, hyphenated, short, and clean.\"\n      return text.trim()                      // \"⚡⚡ Don't forget: URL fragments should be i18n-friendly, hyphenated, short, and clean.\"\n        .replace(/'/gi, '')                   // \"⚡⚡ Dont forget: URL fragments should be i18n-friendly, hyphenated, short, and clean.\"\n        .replace(nonsafeChars, '-')           // \"⚡⚡-Dont-forget--URL-fragments-should-be-i18n-friendly--hyphenated--short--and-clean-\"\n        .replace(/-{2,}/g, '-')               // \"⚡⚡-Dont-forget-URL-fragments-should-be-i18n-friendly-hyphenated-short-and-clean-\"\n        .substring(0, this.options.truncate)  // \"⚡⚡-Dont-forget-URL-fragments-should-be-i18n-friendly-hyphenated-\"\n        .replace(/^-+|-+$/gm, '')             // \"⚡⚡-Dont-forget-URL-fragments-should-be-i18n-friendly-hyphenated\"\n        .toLowerCase();                       // \"⚡⚡-dont-forget-url-fragments-should-be-i18n-friendly-hyphenated\"\n    };\n\n    /**\n     * Determines if this element already has an AnchorJS link on it.\n     * Uses this technique: https://stackoverflow.com/a/5898748/1154642\n     * @param    {HTMLElement}  el - a DOM node\n     * @return   {Boolean}     true/false\n     */\n    this.hasAnchorJSLink = function(el) {\n      var hasLeftAnchor = el.firstChild && (' ' + el.firstChild.className + ' ').indexOf(' anchorjs-link ') > -1,\n          hasRightAnchor = el.lastChild && (' ' + el.lastChild.className + ' ').indexOf(' anchorjs-link ') > -1;\n\n      return hasLeftAnchor || hasRightAnchor || false;\n    };\n\n    /**\n     * Turns a selector, nodeList, or array of elements into an array of elements (so we can use array methods).\n     * It also throws errors on any other inputs. Used to handle inputs to .add and .remove.\n     * @param  {String|Array|Nodelist} input - A CSS selector string targeting elements with anchor links,\n     *                                         OR a nodeList / array containing the DOM elements.\n     * @return {Array} - An array containing the elements we want.\n     */\n    function _getElements(input) {\n      var elements;\n      if (typeof input === 'string' || input instanceof String) {\n        // See https://davidwalsh.name/nodelist-array for the technique transforming nodeList -> Array.\n        elements = [].slice.call(document.querySelectorAll(input));\n      } else if (Array.isArray(input) || input instanceof NodeList) {\n        elements = [].slice.call(input);\n      } else {\n        throw new TypeError('The selector provided to AnchorJS was invalid.');\n      }\n\n      return elements;\n    }\n\n    /**\n     * _addBaselineStyles\n     * Adds baseline styles to the page, used by all AnchorJS links irregardless of configuration.\n     */\n    function _addBaselineStyles() {\n      // We don't want to add global baseline styles if they've been added before.\n      if (document.head.querySelector('style.anchorjs') !== null) {\n        return;\n      }\n\n      var style = document.createElement('style'),\n          linkRule =\n          '.anchorjs-link{'                        +\n            'opacity:0;'                           +\n            'text-decoration:none;'                +\n            '-webkit-font-smoothing:antialiased;'  +\n            '-moz-osx-font-smoothing:grayscale'    +\n          '}',\n          hoverRule =\n          ':hover>.anchorjs-link,'                 +\n          '.anchorjs-link:focus{'                  +\n            'opacity:1'                            +\n          '}',\n          anchorjsLinkFontFace =\n          '@font-face{'                            +\n            'font-family:anchorjs-icons;'          + // Icon from icomoon; 10px wide & 10px tall; 2 empty below & 4 above\n            'src:url(data:n/a;base64,AAEAAAALAIAAAwAwT1MvMg8yG2cAAAE4AAAAYGNtYXDp3gC3AAABpAAAAExnYXNwAAAAEAAAA9wAAAAIZ2x5ZlQCcfwAAAH4AAABCGhlYWQHFvHyAAAAvAAAADZoaGVhBnACFwAAAPQAAAAkaG10eASAADEAAAGYAAAADGxvY2EACACEAAAB8AAAAAhtYXhwAAYAVwAAARgAAAAgbmFtZQGOH9cAAAMAAAAAunBvc3QAAwAAAAADvAAAACAAAQAAAAEAAHzE2p9fDzz1AAkEAAAAAADRecUWAAAAANQA6R8AAAAAAoACwAAAAAgAAgAAAAAAAAABAAADwP/AAAACgAAA/9MCrQABAAAAAAAAAAAAAAAAAAAAAwABAAAAAwBVAAIAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAMCQAGQAAUAAAKZAswAAACPApkCzAAAAesAMwEJAAAAAAAAAAAAAAAAAAAAARAAAAAAAAAAAAAAAAAAAAAAQAAg//0DwP/AAEADwABAAAAAAQAAAAAAAAAAAAAAIAAAAAAAAAIAAAACgAAxAAAAAwAAAAMAAAAcAAEAAwAAABwAAwABAAAAHAAEADAAAAAIAAgAAgAAACDpy//9//8AAAAg6cv//f///+EWNwADAAEAAAAAAAAAAAAAAAAACACEAAEAAAAAAAAAAAAAAAAxAAACAAQARAKAAsAAKwBUAAABIiYnJjQ3NzY2MzIWFxYUBwcGIicmNDc3NjQnJiYjIgYHBwYUFxYUBwYGIwciJicmNDc3NjIXFhQHBwYUFxYWMzI2Nzc2NCcmNDc2MhcWFAcHBgYjARQGDAUtLXoWOR8fORYtLTgKGwoKCjgaGg0gEhIgDXoaGgkJBQwHdR85Fi0tOAobCgoKOBoaDSASEiANehoaCQkKGwotLXoWOR8BMwUFLYEuehYXFxYugC44CQkKGwo4GkoaDQ0NDXoaShoKGwoFBe8XFi6ALjgJCQobCjgaShoNDQ0NehpKGgobCgoKLYEuehYXAAAADACWAAEAAAAAAAEACAAAAAEAAAAAAAIAAwAIAAEAAAAAAAMACAAAAAEAAAAAAAQACAAAAAEAAAAAAAUAAQALAAEAAAAAAAYACAAAAAMAAQQJAAEAEAAMAAMAAQQJAAIABgAcAAMAAQQJAAMAEAAMAAMAAQQJAAQAEAAMAAMAAQQJAAUAAgAiAAMAAQQJAAYAEAAMYW5jaG9yanM0MDBAAGEAbgBjAGgAbwByAGoAcwA0ADAAMABAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAH//wAP) format(\"truetype\")' +\n          '}',\n          pseudoElContent =\n          '[data-anchorjs-icon]::after{'           +\n            'content:attr(data-anchorjs-icon)'     +\n          '}',\n          firstStyleEl;\n\n      style.className = 'anchorjs';\n      style.appendChild(document.createTextNode('')); // Necessary for Webkit.\n\n      // We place it in the head with the other style tags, if possible, so as to\n      // not look out of place. We insert before the others so these styles can be\n      // overridden if necessary.\n      firstStyleEl = document.head.querySelector('[rel=\"stylesheet\"],style');\n      if (firstStyleEl === undefined) {\n        document.head.appendChild(style);\n      } else {\n        document.head.insertBefore(style, firstStyleEl);\n      }\n\n      style.sheet.insertRule(linkRule, style.sheet.cssRules.length);\n      style.sheet.insertRule(hoverRule, style.sheet.cssRules.length);\n      style.sheet.insertRule(pseudoElContent, style.sheet.cssRules.length);\n      style.sheet.insertRule(anchorjsLinkFontFace, style.sheet.cssRules.length);\n    }\n  }\n\n  return AnchorJS;\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}