import { declare } from '@babel/helper-plugin-utils';
import { parse } from '@vue/compiler-sfc';
import fs from 'fs';
import pluginTransformTypeScript from '@babel/plugin-transform-typescript';
import presetTypeScript from '@babel/preset-typescript';

var fileTest = (filePath => {
  if (/\.vue$/.test(filePath)) {
    const {
      script,
      scriptSetup
    } = parse(fs.readFileSync(filePath, {
      encoding: "utf8"
    })).descriptor;
    return !!script && !!script.lang ? script.lang.toLowerCase() === "ts" : !!scriptSetup && !!scriptSetup.lang && scriptSetup.lang.toLowerCase() === "ts";
  }

  return false;
});

var index = declare((api, options = {}) => {
  api.assertVersion(7);
  return {
    "presets": [[presetTypeScript, options]],
    "overrides": [{
      "test": fileTest,
      "plugins": [[pluginTransformTypeScript, options]]
    }]
  };
});

export default index;
