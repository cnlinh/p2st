{"ast":null,"code":"import AuthService from '../services/auth.service';\nimport AdminService from '../services/admin.service';\nconst user = JSON.parse(sessionStorage.getItem('user'));\nconst initialState = {\n  status: {\n    loggedIn: user ? true : false\n  },\n  user: null,\n  userDetail: null,\n  sessionId: null\n};\nexport const auth = {\n  namespaced: true,\n  state: initialState,\n  actions: {\n    async initUser(_ref) {\n      let {\n        commit\n      } = _ref;\n      const user = JSON.parse(sessionStorage.getItem('user'));\n      const userDetail = JSON.parse(sessionStorage.getItem('userDetail'));\n      const charts = await AdminService.getCharts();\n      const sessionId = charts.sessionId;\n      commit('updateUser', user);\n      commit('updateUserDetail', userDetail);\n      commit('updateSessionId', sessionId);\n    },\n    async login(_ref2, user) {\n      let {\n        commit,\n        dispatch\n      } = _ref2;\n      return AuthService.login(user).then(user => {\n        commit('loginSuccess', user);\n        dispatch('initUser');\n        dispatch('admin/initData', null, {\n          root: true\n        });\n        return Promise.resolve(user);\n      }, error => {\n        commit('loginFailure');\n        return Promise.reject(error);\n      });\n    },\n    logout(_ref3) {\n      let {\n        commit\n      } = _ref3;\n      AuthService.logout();\n      commit('logout');\n    }\n  },\n  mutations: {\n    updateUser(state, user) {\n      state.user = user;\n    },\n    updateUserDetail(state, userDetail) {\n      state.userDetail = userDetail;\n    },\n    updateSessionId(state, sessionId) {\n      state.sessionId = sessionId;\n    },\n    loginSuccess(state, user) {\n      state.status.loggedIn = true;\n      state.user = user;\n    },\n    loginFailure(state) {\n      state.status.loggedIn = false;\n      state.user = null;\n    },\n    logout(state) {\n      state.status.loggedIn = false;\n      state.user = null;\n    }\n  }\n};","map":{"version":3,"names":["AuthService","AdminService","user","JSON","parse","sessionStorage","getItem","initialState","status","loggedIn","userDetail","sessionId","auth","namespaced","state","actions","initUser","_ref","commit","charts","getCharts","login","_ref2","dispatch","then","root","Promise","resolve","error","reject","logout","_ref3","mutations","updateUser","updateUserDetail","updateSessionId","loginSuccess","loginFailure"],"sources":["/Users/linhcao/Desktop/NUS/chat-gpt/frontend/src/store/auth.module.js"],"sourcesContent":["import AuthService from '../services/auth.service';\nimport AdminService from '../services/admin.service';\n\nconst user = JSON.parse(sessionStorage.getItem('user'));\n\nconst initialState = {\n  status: {\n    loggedIn: user ? true : false,\n  },\n  user: null,\n  userDetail: null,\n  sessionId: null,\n};\n\nexport const auth = {\n  namespaced: true,\n  state: initialState,\n  actions: {\n    async initUser({ commit }) {\n      const user = JSON.parse(sessionStorage.getItem('user'));\n      const userDetail = JSON.parse(sessionStorage.getItem('userDetail'));\n      const charts = await AdminService.getCharts();\n      const sessionId = charts.sessionId;\n\n      commit('updateUser', user);\n      commit('updateUserDetail', userDetail);\n      commit('updateSessionId', sessionId);\n    },\n\n    async login({ commit, dispatch }, user) {\n      return AuthService.login(user).then(\n        user => {\n          commit('loginSuccess', user);\n          dispatch('initUser');\n          dispatch('admin/initData', null, { root: true });\n          return Promise.resolve(user);\n        },\n        error => {\n          commit('loginFailure');\n          return Promise.reject(error);\n        }\n      );\n    },\n\n    logout({ commit }) {\n      AuthService.logout();\n      commit('logout');\n    },\n  },\n  mutations: {\n    updateUser(state, user) {\n      state.user = user;\n    },\n    updateUserDetail(state, userDetail) {\n      state.userDetail = userDetail;\n    },\n    updateSessionId(state, sessionId) {\n      state.sessionId = sessionId;\n    },\n    loginSuccess(state, user) {\n      state.status.loggedIn = true;\n      state.user = user;\n    },\n    loginFailure(state) {\n      state.status.loggedIn = false;\n      state.user = null;\n    },\n    logout(state) {\n      state.status.loggedIn = false;\n      state.user = null;\n    },\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}